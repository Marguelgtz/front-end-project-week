{"version":3,"sources":["actions/index.js","components/NoteCard.js","components/noteViews/NoteList.js","components/SideNav.js","components/noteViews/NewNote.js","components/note.js","components/MarkdownPreview.js","components/noteViews/NoteEdit.js","App.js","reducers/index.js","index.js"],"names":["fetchNotes","dispatch","type","axios","get","then","response","payload","data","catch","err","getNote","id","concat","NoteCard","console","log","this","props","react_default","a","createElement","className","Link","to","title","textBody","React","Component","connect","state","NoteList","notes","loading","error","map","note","components_NoteCard","key","Math","random","_id","fetchingNotes","SideNav","inputChangeHandler","e","_this","filter","target","value","searchChangeHandler","placeholder","searchValue","onChange","NewNote","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inputHadler","setState","defineProperty","name","addNoteHandler","preventDefault","addNote","history","push","tags","onClick","post","Note","handleChange","checked","deleteHandler","deleteNote","match","params","bind","assertThisInitialized","_this2","setTimeout","markdownInput","react_switch_default","react_markdown_default","source","delete","MarkdownPreview","body","noteBody","forceUpdate","editNoteHandler","editNote","inputHandler","components_MarkdownPreview","put","App","componentDidMount","filterHandler","filterNotes","toLowerCase","includes","filteredNotes","HashRouter","components_SideNav","Switch","Route","exact","path","render","components_noteViews_NoteList","length","component","NoteEdit","initialState","fetchingNote","savingNote","updatingNote","store","createStore","arguments","undefined","action","objectSpread","applyMiddleware","thunk","logger","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.be49210f.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const FETCHING = \"FETCHING\";\nexport const FETCHING_NOTE = \"FETCHING\";\nexport const GET_NOTES = \"GET_NOTES\";\nexport const GET_NOTE = \"GET_NOTE\";\nexport const ADDING = \"ADDING\";\nexport const ADDED = \"ADDED\";\nexport const ERROR = \"ERROR\";\nexport const NOTE_UPDATING = 'NOTE_UPDATING';\nexport const NOTE_UPDATED = \"NOTE_UPDATED\";\n\n//Fetching notes\nexport const fetchNotes = () => dispatch => {\n  dispatch({type: FETCHING});\n  axios \n    .get(\"https://fe-notes.herokuapp.com/note/get/all\")\n    .then(response => {\n      dispatch({\n        type: GET_NOTES,\n        payload: response.data,\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: ERROR,\n        payload: err,\n      })  \n  })\n}\n\n//Adding a new note\n// new note is added to the api but doesnt update live, I have to refresh page to see new note ---- fixed\n\nexport const addNote = note => dispatch => {\n  dispatch({type: ADDING})\n    axios \n      .post(\"https://fe-notes.herokuapp.com/note/create\", note)\n      .then(() => fetchNotes()(dispatch))\n      .catch(err => {\n        dispatch({\n          type: ERROR,\n          payload: err,   \n    })\n  })\n}\n\n// Getting an especific note\n\nexport const getNote = id => dispatch => {\n  dispatch({type: FETCHING_NOTE});\n  axios\n    .get(`https://fe-notes.herokuapp.com/note/get/${id}`)\n    .then(response => {\n      dispatch({type: GET_NOTE, payload: response.data})\n    })\n    .catch(err => {\n      dispatch({type: ERROR, payload: err})\n    })\n}\n\n// Edit Note\n\nexport const editNote = (id, note) => dispatch => {\n  dispatch({type: NOTE_UPDATING});\n  axios \n    .put(`https://fe-notes.herokuapp.com/note/edit/${id}`, note)\n    .then(() => fetchNotes()(dispatch))\n    .catch(err => {\n      dispatch({type: ERROR, payload: err})\n    })\n}\n\n// Delete Note\n\nexport const deleteNote = id => dispatch => {\n  dispatch({type: FETCHING});\n  axios \n    .delete(`https://fe-notes.herokuapp.com/note/delete/${id}`)\n    .then(()=> fetchNotes()(dispatch))\n    .catch(err => {\n      dispatch({type: ERROR, payload: err})\n    })\n}","import React from 'react';\nimport { Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {getNote} from \"../actions\";\n\n\nclass NoteCard extends React.Component {\n\n  \n\n  render(){\n\n    console.log(this.props.id)\n\n    return (\n      <div className=\"card-main-container\">\n        <div className=\"card-header-container\">\n          <Link to={`/note/${this.props.id}`}><p>{this.props.title}</p></Link>\n        </div>\n        {/* just show preview for now, implement SUMMRY api when mvp  is done */}\n        <div className=\"card-body-container\">\n          <p className=\"text-body\">{this.props.textBody}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps, {getNote})(NoteCard);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport NoteCard from '../NoteCard';\nimport {fetchNotes} from '../../actions/index';\nimport './NoteList.css';\n\n\n\nclass NoteList extends Component {\n\n\n  \n  render() { \n    let notes = this.props.notes;\n    return (\n      <div className=\"list-main-container\">\n        <div className=\"list-header-container\">\n          <h1>Your Notes</h1>\n        </div>\n        <div className=\"list-body-container\">\n          {this.props.loading ? <h1>Loading Note List</h1> : null}\n          {this.props.error !== '' ? <h1>{this.props.error}</h1> : null }\n          {notes.map(note => {\n            return (\n              <NoteCard\n                key={Math.random()}\n                id={note._id}\n                title={note.title}\n                textBody={note.textBody} \n              />\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    error: state.error,\n    loading: state.fetchingNotes,\n})\n\nexport default connect(mapStateToProps, {fetchNotes})(NoteList);\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'; \n\nclass SideNav extends Component {\n\n  inputChangeHandler = e => {\n    this.props.filter(e.target.value)\n  }\n\n  searchChangeHandler = e => {\n    this.props.filter(e.target.value);\n  }\n\n  render() { \n    return (\n      <div className=\"nav-main-container\">\n        <div className=\"nav-header-container\">\n          <h2>NOTES APP</h2>\n          <i className=\"fas fa-arrow-left\"></i>\n        </div>\n        <div className=\"buttons-search-container\">\n          <Link to=\"/\">\n            <div className=\"nav-button\">View Notes</div>\n          </Link>\n          <Link to=\"/new\">\n            <div className=\"nav-button\">New Note +</div>\n          </Link>\n        <div className=\"search-container\">\n          <input \n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"search-imput\"\n            value={this.props.searchValue}\n            onChange={this.searchChangeHandler} />\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideNav;","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {addNote} from '../../actions'\n\nclass NewNote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [],\n      title: '',\n      textBody: ''\n    }\n  }\n\n  inputHadler = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n    console.log('input handled');\n  }\n\n  addNoteHandler = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.addNote(this.state);\n    this.setState({\n      title: '',\n      textBody: '',\n    })\n    this.props.history.push(\"/\");\n  }\n\n  render() { \n    return ( \n      <div className=\"new-note-form\">\n        <h2>Add new Note</h2>\n        <div className=\"form-container\">\n          <div className=\"new-form\">\n            <input \n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.inputHadler} />\n            <textarea \n              className=\"new-body-input\"\n              type=\"text\"\n              placeholder=\"Write Your note Here\"\n              name=\"textBody\"\n              value={this.state.textBody}\n              onChange={this.inputHadler} />\n              <button onClick={this.addNoteHandler}>Add New Note</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n})\n\nexport default connect(mapStateToProps, {addNote})(NewNote)","import React from 'react';\nimport {connect} from 'react-redux';\nimport {getNote, deleteNote} from '../actions';\nimport {Link} from 'react-router-dom';\nimport Switch from 'react-switch';\nimport ReactMarkdown from 'react-markdown';\n\n\nclass Note extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      title: null,\n      textBody: null,\n      checked: false,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount(){\n    this.props.getNote(this.props.match.params.id);\n    this.setState({\n      title: null,\n      textBody: null,\n      id: null,\n    })\n  }\n\n  handleChange = checked => {\n    this.setState({checked})\n  }\n\n  deleteHandler = () => {\n    this.props.deleteNote(this.props.match.params.id)\n    this.props.history.push(\"/\")\n  }\n\n  render(){\n\n    setTimeout(() => {\n      this.setState({\n        title: this.props.note.title,\n        textBody: this.props.note.textBody,\n        id: this.props.note._id,\n      })\n    }, 600);\n  \n    if (this.state.id !== this.props.match.params.id) {\n      return (\n        <div className=\"wait\">\n          <h2>Loading Note...</h2>\n        </div>\n      )\n    } \n\n    const markdownInput = this.state.textBody;\n\n    return(\n    \n    <div className=\"note-container\">\n    {/* Need to find a way to get title and textbody from mapStateToProps via props from state --- fixed*/}\n      <div className=\"note-header\">\n      <h2>{this.state.title}</h2>\n      <Link to={`/note/edit/${this.state.id}`}><button>Update</button></Link>\n      <button onClick={this.deleteHandler}>Delete</button>\n      </div>\n      <div className=\"markdown-switch\">\n        <p>Switch between Normal and MarkDown view</p>\n        <Switch \n          onChange={this.handleChange}\n          checked={this.state.checked}\n          className=\"switch\" />\n      </div>\n      <div className=\"body-container\">\n        {this.state.checked ? <ReactMarkdown source={markdownInput}/> : <p className=\"text-body\">{this.state.textBody}</p> }\n        \n      </div>\n    </div>\n  )\n\n\n  }\n}\n\nconst mapStateToProps = state => ({\n  note: state.note,\n})\n\nexport default connect(mapStateToProps, {getNote, deleteNote})(Note);","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nclass MarkdownPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      body: '',\n    }\n  }\n  \n\n\n  render() { \n    console.log(this.props.noteBody)\n    return (\n      <div className=\"edit-markdown-preview\">\n        {}\n        <ReactMarkdown \n          source={this.props.noteBody} />\n      </div>\n    );\n  }\n}\n\nexport default MarkdownPreview;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {editNote, getNote} from '../../actions';\nimport Switch from 'react-switch';\nimport MarkdownPreview from '../MarkdownPreview';\n\n\nclass Note extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      title: null,\n      textBody: null,\n      checked: false,\n    }\n    \n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount(){\n    this.props.getNote(this.props.match.params.id);\n    console.log(\"CDM Invoked\")\n    setTimeout(() => {\n      console.log(\"ST invoked\")\n      this.setState({\n        title: this.props.note.title,\n        textBody: this.props.note.textBody,\n      })\n    }, 300);\n  }\n \n\n  handleChange = checked => {\n    this.forceUpdate();\n    this.setState({checked})\n  }\n\n  editNoteHandler= e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.editNote(this.props.match.params.id, this.state);\n    this.props.history.push(\"/\");\n  }\n  \n\n  inputHandler = e => {\n    console.log(this.state)\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  render(){\n\n    return(\n    \n      <div className=\"edit-note-form\">\n        <div className=\"edit-note-header\">\n          <h2>Edit Note</h2>\n          <p>Switch to markdown live editor</p>\n          <Switch \n            onChange={this.handleChange}\n            checked={this.state.checked} />\n        </div>\n      <div className=\"edit-form-container\">\n        <form>\n          <div className=\"edit-title\">\n            <input \n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.inputHandler}\n              />\n          </div>\n          {/* Normal text editor */}\n          <div className=\"edit-body\">\n            <input \n              type=\"text\"\n              name=\"textBody\"\n              value={this.state.textBody}\n              onChange={this.inputHandler}\n              />\n          </div>\n          {/* Live Markdown Editor */}\n          <div className=\"markdown-edit-body\">\n            <div className=\"edit-window\">\n            <input \n              type=\"text\"\n              name=\"textBody\"\n              value={this.state.textBody}\n              onChange={this.inputHandler}\n              />\n            </div>\n            <div className=\"preview-window\">\n              {/* need preview window to update on state change \n                possible fixes \n                  - renderers-nope\n                  - componentWillUpdate\n                  - calling render on ReactMarkdown on state change*/}\n              \n              <MarkdownPreview \n                noteBody={this.state.textBody} />\n            </div>\n          </div>\n          <button onClick={this.editNoteHandler}>Submit</button>\n        </form>\n      </div>\n    </div>\n  )\n  \n\n\n  }\n}\n\nconst mapStateToProps = state => ({\n  note: state.note,\n})\n\nexport default connect(mapStateToProps, {editNote, getNote})(Note);\n","import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {fetchNotes} from './actions'\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport './App.css';\nimport NoteList from './components/noteViews/NoteList';\nimport SideNav from './components/SideNav';\nimport NewNote from './components/noteViews/NewNote';\nimport Note from './components/note'\nimport NoteEdit from './components/noteViews/NoteEdit'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      filteredNotes: [],\n      searchValue: '',\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.fetchNotes()\n  }\n\n  filterHandler = e => {\n    let filterNotes = this.props.notes.filter(note => note.title.toLowerCase().includes(e))\n    this.setState({\n      filteredNotes: filterNotes,\n      searchValue: e,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app-main-container\">\n        <Router>\n\n        <div className=\"App\">\n        <SideNav className=\"nav-component\" \n          searchValue={this.state.searchValue}\n          filter={this.filterHandler}/>\n\n        <Switch>\n          <Route exact path='/' render={() =>   <NoteList notes=  {this.state.filteredNotes.length > 0 ?  this.state.filteredNotes : this.props.notes} />}/>\n          <Route path='/new' component={NewNote}/>\n          <Route exact path='/note/:id' component=  {Note}/>\n          <Route exact path='/note/edit/:id'  component={NoteEdit}/>\n\n\n        </Switch>\n        {/* <NewNote/> */}\n        </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n})\n\nexport default connect(mapStateToProps, {fetchNotes})(App);\n\n\n","import {\n  FETCHING,\n  FETCHING_NOTE,\n  GET_NOTES,\n  GET_NOTE,\n  ADDING,\n  ADDED,\n  ERROR} from '../actions';\n\nconst initialState = {\n  notes: [],\n  note: null,\n  fetchingNotes: false,\n  fetchingNote: false,\n  savingNote: false,\n  updatingNote: false,\n  error: null,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCHING:\n      return {...state, fetchingNotes: true,}\n    case GET_NOTES:\n      return {...state, notes: action.payload, fetchingNotes: false}\n    case FETCHING_NOTE:\n      return {...state, fetchingNote: true,}\n    case GET_NOTE:\n      return {...state, note: action.payload, fetchingNote: false, fetchingNotes: false}\n    case ADDING:\n      return {...state, savingNote: true}\n    case ADDED:\n      return {...state, savingNote: false};\n    case ERROR:\n      return {...state, error: action.payload}\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {HashRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport notesReducer from './reducers';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nconst store = createStore(notesReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n<Router>\n  <Provider store={store}>\n    <App />\n  </Provider>\n</Router>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}